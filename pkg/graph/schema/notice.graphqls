type Notice {
    id: Int64!
    title: String!
    content: String!
    startAt: String!
    endAt: String!
    status: Status!
}

input ListNoticeInput {
    content: String!
    status: Status!
}

type ListNoticeResp {
    pagination: Pagination!
    notices: [Notice]!
}

type GetNoticeResp {
    notice: Notice!
}

extend type Query {
    listNotice(filter: ListNoticeInput!, pagination: PaginationInput!): ListNoticeResp!
    getNotice(id: Int64!): GetNoticeResp!
}

input CreateNoticeInput {
    title: String!
    content: String!
    startAt: String!
    endAt: String!
    status: Status!
}

input UpdateNoticeInput {
    id: Int64!
    title: String!
    content: String!
    startAt: String!
    endAt: String!
    status: Status!
}

extend type Mutation {
    createNotice(input: CreateNoticeInput!): Boolean!
    updateNotice(input: UpdateNoticeInput!): Boolean!
    deleteNotice(id: Int64!): Boolean!
}