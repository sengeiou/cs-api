type FastMessage {
    id: Int64!
    category: String!
    categoryID: Int64!
    title: String!
    content: String!
    status: Status!
}

input ListFastMessageInput {
    title: String!
    content: String!
    status: Status!
}

type ListFastMessageResp {
    pagination: Pagination!
    fastMessages: [FastMessage]!
}

type FastMessageCategory {
    id: Int64!
    name: String!
}

type ListFastMessageCategoryResp {
    categories: [FastMessageCategory]!
}

type FastMessageGroupItem {
    category: FastMessageCategory
    items: [FastMessage]!
}

type ListFastMessageGroupResp {
    group: [FastMessageGroupItem]!
}

type GetFastMessageResp {
    fastMessage: FastMessage!
}

extend type Query {
    listFastMessage(filter: ListFastMessageInput!, pagination: PaginationInput!): ListFastMessageResp!
    listFastMessageCategory: ListFastMessageCategoryResp!
    """根據分類列出快捷訊息"""
    listFastMessageGroup: ListFastMessageGroupResp!
    getFastMessage(id: Int64!): GetFastMessageResp!
}

input CreateFastMessageInput {
    categoryID: Int64!
    title: String!
    content: String!
    status: Status!
}

input UpdateFastMessageInput {
    id: Int64!
    categoryID: Int64!
    title: String!
    content: String!
    status: Status!
}

input CreateFastMessageCategoryInput {
    name: String!
}

extend type Mutation {
    createFastMessage(input: CreateFastMessageInput!): Boolean!
    updateFastMessage(input: UpdateFastMessageInput!): Boolean!
    deleteFastMessage(id: Int64!): Boolean!
    createFastMessageCategory(input: CreateFastMessageCategoryInput!): Boolean!
}